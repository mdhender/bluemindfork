@use "sass:map";
@import "utils/buttons";

// stylelint-disable selector-no-qualifying-type

// In _reboot.scss file used by Bootstrap, there is a rule to "remove focus outline in
// Chromium when it shouldn't be visible (e.g. as result of mouse click or touch tap)"
// but it lacks "!important" so we repeat this rule here with "!important" added:
button:focus:not(:focus-visible) {
    outline: 0 !important;
    // And we extend it to disable focus shadow for fill buttons:
    box-shadow: none !important;
}

//
// Base styles
//

.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: $btn-font-family;
    font-weight: $btn-font-weight;
    text-decoration: none;
    white-space: $btn-white-space;
    vertical-align: middle;
    user-select: none;
    background-color: transparent;
    @include transition($btn-transition);

    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    > .slot-wrapper {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
    pointer-events: none;
}

//
// Alternate buttons
//

.btn-fill-accent {
    @include bm-button-fill-variant("fill-secondary");
}
.btn-fill {
    @include bm-button-fill-variant("fill-neutral");
}
.btn-fill-danger {
    @include bm-button-fill-variant("fill-danger");
}
.btn-outline-accent {
    @include bm-button-outline-variant("secondary");
}
.btn-outline {
    @include bm-button-outline-variant("neutral");
}
.btn-outline-danger {
    @include bm-button-outline-variant("danger");
}
.btn-text-accent {
    @include bm-button-text-variant("secondary");
}
.btn-text {
    @include bm-button-text-variant("neutral");
}
.btn-outline-on-fill-primary {
    @include bm-button-outline-variant("fill-primary");
}
.btn-text-on-fill-primary {
    @include bm-button-text-variant("fill-primary");
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
    font-weight: $font-weight-normal;
    line-height: $line-height;
    color: $link-color;
    text-decoration: $link-decoration;
    border: none;
    padding: 0;

    > .bm-icon {
        $size: map-get($icon-sizes, "xs");
        width: $size;
        height: $size;
        margin-right: $sp-3;
    }

    @include hover() {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
    }

    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
        outline-width: 1px !important;
        outline-style: $outline-style !important;
        outline-color: $neutral-fg;
        &:hover,
        &.hover {
            outline-color: $neutral-fg-hi1;
        }
    }

    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
        pointer-events: none;
    }

    .show > &.dropdown-toggle {
        @include box-shadow(none);

        &:focus,
        &.focus {
            @include box-shadow(none);
        }
    }
}

@each $bp-key, $bp-value in $grid-breakpoints {
    @media (min-width: $bp-value) {
        .btn-#{$bp-key}-fill-accent {
            @include bm-button-fill-variant("fill-secondary", $important: true);
        }
        .btn-#{$bp-key}-fill {
            @include bm-button-fill-variant("fill-neutral", $important: true);
        }
        .btn-#{$bp-key}-fill-danger {
            @include bm-button-fill-variant("fill-danger", $important: true);
        }
        .btn-#{$bp-key}-outline-accent {
            @include bm-button-outline-variant("secondary", $important: true);
        }
        .btn-#{$bp-key}-outline {
            @include bm-button-outline-variant("neutral", $important: true);
        }
        .btn-#{$bp-key}-outline-danger {
            @include bm-button-outline-variant("danger", $important: true);
        }
        .btn-#{$bp-key}-text-accent {
            @include bm-button-text-variant("secondary", $important: true);
        }
        .btn-#{$bp-key}-text {
            @include bm-button-text-variant("neutral", $important: true);
        }
        .btn-#{$bp-key}-outline-on-fill-primary {
            @include bm-button-outline-variant("fill-primary", $important: true);
        }
        .btn-#{$bp-key}-text-on-fill-primary {
            @include bm-button-text-variant("fill-primary", $important: true);
        }
    }
}

.btn-no-hover-bg {
    &::before {
        display: none;
    }
}

.btn-transparent-bg {
    background-color: transparent;
    &:hover,
    &:focus {
        background-color: transparent;
    }
}

// Some close buttons generated by Bootstrap (e.g. in message boxes) cannot be overridden with BmButtonClose
// so we need to make them as similar as possible to our BmButtonClose
button:not(.bm-button-close).close {
    font-weight: 300;
    font-size: base-px-to-rem(44);
    color: $neutral-fg;

    flex: none;

    @include bm-icon-button-compact-variant("neutral");
    $size: map-get($btn-close-sizes, "lg");
    height: $size;
    width: $size;
    padding: 0;
    margin: 0;
}

// reset bootstrap behavior (see bootstrap file button-group.scss l.42) to fix a border problem on hover
.btn-group {
    > .btn:not(:first-child),
    > .btn-group:not(:first-child) {
        margin-left: unset;
    }
}

.btn-group.show .dropdown-toggle {
    box-shadow: none;
}
