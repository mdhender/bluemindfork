export const SMIME_INTERNAL_API_URL = "/service-worker-internal/smime";
export enum PKIStatus {
    EMPTY = 0,
    CERTIFICATE_OK = 1,
    PRIVATE_KEY_OK = 2,
    OK = PRIVATE_KEY_OK | CERTIFICATE_OK
}
export enum PKIEntry {
    PRIVATE_KEY = "privateKey",
    CERTIFICATE = "certificate"
}
export const ENCRYPTED_HEADER_NAME = "X-MailApp-Encrypted";
export const SIGNED_HEADER_NAME = "X-MailApp-Signed";
export enum CRYPTO_HEADERS {
    TO_DO = 1,
    OK = 2,
    INVALID_KEY = 4,
    KEY_NOT_FOUND = 8,
    MY_INVALID_CERTIFICATE = 16,
    MY_CERTIFICATE_NOT_FOUND = 32,
    REVOKED_CERTIFICATE = 64,
    EXPIRED_CERTIFICATE = 128,
    UNSUPPORTED_ALGORITHM = 256,
    UNTRUSTED_CERTIFICATE = 512,
    UNMATCHED_CERTIFICATE = 1024,
    INVALID_MESSAGE_INTEGRITY = 2048,
    INVALID_PKCS7_ENVELOPE = 4096,
    INVALID_SIGNATURE = 8192,
    DECRYPT_FAILURE = 16384,
    ENCRYPT_FAILURE = 32768,
    CERTIFICATE_RECIPIENT_NOT_FOUND = 65536,
    INVALID_CERTIFICATE_RECIPIENT = 131072,
    SIGN_FAILURE = 262144,
    INVALID_ORIGINATOR = 524288,
    UNKNOWN = 1048576
}
export enum SMIMEPrefKeys {
    SIGNATURE = "sign_message_by_default",
    ENCRYPTION = "encrypt_message_by_default"
}
export const IS_SW_AVAILABLE = !!navigator.serviceWorker?.controller;
export const SMIME_ENCRYPTION_ERROR_PREFIX = "SMIME_ENCRYPTION_ERROR";
export const SMIME_SIGNATURE_ERROR_PREFIX = "SMIME_SIGNATURE_ERROR";
