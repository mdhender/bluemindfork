#!/bin/bash
#BEGIN LICENSE
#
# Copyright Â© Blue Mind SAS, 2012-2016
#
# This file is part of BlueMind. BlueMind is a messaging and collaborative
# solution.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of either the GNU Affero General Public License as
# published by the Free Software Foundation (version 3 of the License).
#
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See LICENSE.txt

set -e

case "$1" in
  triggered)
    if [ -d /run/systemd/system ]; then
        systemctl start bluemind.target || true
    fi
    exit 0
    ;;
esac

# Source debconf library.
. /usr/share/debconf/confmodule

is_initial_configuration() {
  # Check if this is the initial configuration and not an upgrade of an 
  # existing configuration 
  # Usage: if is_initial_configuration "$@"; then ... fi from top level 

  # Plain installation 
  if [ "$1" = configure ] && [ -z "$2" ]; then
    return 0
  fi

  # Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then
    return 0
  fi

  return 1
}

manageSystemUserGroup() {
    getent group bluemind > /dev/null || addgroup --system bluemind

    # Add user cyrus to group bluemind, if such group and user exists
    getent passwd cyrus >/dev/null && adduser cyrus bluemind
    # Add user www-data to group bluemind, if such group and user exists
    getent passwd www-data >/dev/null && adduser www-data bluemind
    # Add user telegraf to group bluemind, if such group and user exists
    getent passwd telegraf >/dev/null && adduser telegraf bluemind

    return 0
}

manageDeprecatedServices() {
    local deprecatedServices="bm-lmtpd \
        bm-sds-proxy \
        bm-xmpp" 

    for service in ${deprecatedServices}; do
        deprecatedServices ${service}
    done
}

removeCyrus() {
    local cyrusServices="bm-cyrus-imapd \
        bm-cyrus-syncclient@0 bm-cyrus-syncclient@1 bm-cyrus-syncclient@2 bm-cyrus-syncclient@3"

    for service in ${cyrusServices}; do
        deprecatedServices ${service}
    done

    [ -e /etc/cron.daily/bm-cyrus-imapd ] && rm -f /etc/cron.daily/bm-cyrus-imapd
    [ -e /etc/systemd/system/bm-cyrus-imapd.service.wants ] && rm -rf /etc/systemd/system/bm-cyrus-imapd.service.wants
}

deprecatedServices() {
    local service=${1}

    echo "Purging deprecated service: "${service}
    update-rc.d ${service} remove >/dev/null || true
    deb-systemd-helper purge ${service}'.service' >/dev/null || true
    deb-systemd-helper unmask ${service}'.service' >/dev/null || true
}

manageSystemUserGroup
manageDeprecatedServices
removeCyrus

for file in /etc/bm/nodeclient_cert.pem \
  /etc/bm/nodeclient_key.pem \
  /etc/bm/nodeclient.p12 \
  /etc/bm/nodeclient_keystore.jks \
  /etc/bm/nodeclient_truststore.jks \
  /etc/bm/bm.jks; do
    if [ -e ${file} ]; then
        chmod 400 ${file}
    fi
done

if [ -e /etc/bm/bm-core.tok ]; then
    chmod 440 /etc/bm/bm-core.tok
    chown root:bluemind /etc/bm/bm-core.tok
fi

#DEBHELPER#

[ -d /run/systemd/system ] && systemctl daemon-reload
for service in $(grep "enable" /lib/systemd/system-preset/10-bluemind.preset |cut -d ' ' -f 2); do
    if systemctl is-enabled ${service} > /dev/null 2>&1; then
        echo -n "Re-enabling "${service}": "
        systemctl reenable ${service} > /dev/null 2>&1 || true
        echo "done"
    fi
done

exit 0
