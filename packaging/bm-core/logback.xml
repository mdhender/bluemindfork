<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true">
	<property name="DEFAULT_PATTERN"
		value="%date{ISO8601, ${net.bluemind.property.system.timezone:-GMT}} [%thread] %c{1} %p - %m%n" />

	<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
		<resetJUL>true</resetJUL>
	</contextListener>

	<!-- Sentry send exceptions -->
	<appender name="Sentry" class="io.sentry.logback.SentryAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
	</appender>


	<appender name="R"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender -->
		<File>/var/log/bm/core.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/core.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>

	<logger name="org.apache.kafka.clients" level="WARN" />
	<logger name="org.apache.kafka.common" level="WARN" />

	<logger name="org.apache.directory.shared" level="ERROR" />
	<logger name="org.apache.directory.ldap.client.api.LdapNetworkConnection" level="ERROR" />
	<logger name="com.netflix.hollow.core.read.engine.HollowBlobReader" level="WARN" />
	<logger name="com.netflix.hollow.api.producer.AbstractHollowProducer" level="WARN" />
	<root level="INFO">
		<appender-ref ref="R" />
		<appender-ref ref="Sentry" />
	</root>

	<!-- log XMPP -->
	<appender name="XMPP"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>/var/log/bm/xmpp.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/xmpp.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<logger name="net.bluemind.xmpp" level="INFO" additivity="false">
		<appender-ref ref="XMPP" />
	</logger>

	<!-- log mailindex -->
	<appender name="MailIndex"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>/var/log/bm/mail-index.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/mail-index.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<logger name="net.bluemind.index.mail" level="INFO" additivity="false">
		<appender-ref ref="MailIndex" />
	</logger>
	<logger name="net.bluemind.tika.client" level="INFO" additivity="false">
		<appender-ref ref="MailIndex" />
	</logger>
	
	<!-- log call -->
	<appender name="SlowRestCall"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>/var/log/bm/slow-call.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/slow-call.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<logger name="net.bluemind.core.rest.log.CallLogger" level="WARN" additivity="false">
		<appender-ref ref="SlowRestCall" />
	</logger>

	<!-- RestSockJsProxyHandler -->
	<appender name="RestSockJsProxyHandler"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>/var/log/bm/js.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/js.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<logger name="net.bluemind.core.rest.sockjs.vertx.RestSockJsProxyHandler" level="INFO" additivity="false">
		<appender-ref ref="RestSockJsProxyHandler" />
	</logger>

	<!-- SendmailHandler -->
	<appender name="SendmailHandler"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>/var/log/bm/sendmail.log</File>
		<encoder>
			<pattern>${DEFAULT_PATTERN}</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<maxIndex>20</maxIndex>
			<FileNamePattern>/var/log/bm/sendmail.log.%i.gz</FileNamePattern>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>60000KB</MaxFileSize>
		</triggeringPolicy>
	</appender>
	<logger name="net.bluemind.core.sendmail" level="INFO" additivity="false">
		<appender-ref ref="SendmailHandler" />
	</logger>
</configuration>
