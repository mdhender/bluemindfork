[[inputs.postgresql_extensible]]
  address = "postgres://bj:bj@localhost/bj"
  databases = ["bj"]
  name_override="postgresql_locks"

[[inputs.postgresql_extensible.query]]
  sqlquery="""SELECT pg_database.datname as db, mode, count(mode) AS locks_count
  FROM pg_locks INNER JOIN pg_database ON pg_database.oid = pg_locks.database
  GROUP BY datname, mode ORDER BY datname, mode"""
  withdbname=false
  tagvalue="db, mode"

[[inputs.postgresql_extensible.query]]
  sqlquery="""SELECT db, count( distinct blocking_pid ) AS num_blocking_sessions,
  count(distinct blocked_pid) AS num_blocked_sessions FROM
  (SELECT a.datname AS db,
    kl.pid AS blocking_pid,
    ka.usename AS blocking_user,
    ka.query AS blocking_query,
    bl.pid AS blocked_pid,
    a.usename AS blocked_user,
    a.query AS blocked_query,
    to_char(age(now(), a.query_start), 'HH24h:MIm:SSs'::text) AS age
   FROM pg_locks bl
     JOIN pg_stat_activity a ON bl.pid = a.pid
     JOIN pg_locks kl ON bl.locktype = kl.locktype AND NOT bl.database IS
     DISTINCT FROM kl.database AND NOT bl.relation IS DISTINCT FROM kl.relation
     AND NOT bl.page IS DISTINCT FROM kl.page AND NOT bl.tuple IS DISTINCT FROM
     kl.tuple AND NOT bl.virtualxid IS DISTINCT FROM kl.virtualxid AND NOT
     bl.transactionid IS DISTINCT FROM kl.transactionid AND NOT bl.classid IS
     DISTINCT FROM kl.classid AND NOT bl.objid IS DISTINCT FROM kl.objid AND
      NOT bl.objsubid IS DISTINCT FROM kl.objsubid AND bl.pid <> kl.pid
     JOIN pg_stat_activity ka ON kl.pid = ka.pid
  WHERE kl.granted AND NOT bl.granted
  ORDER BY a.query_start) as blocking_procs group by db"""
  withdbname=false
  tagvalue="db"